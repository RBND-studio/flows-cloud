name: Staging deployment

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    environment: staging
    runs-on: [self-hosted, stage-env]
    steps:
      - uses: actions/checkout@v4
        with:
          path: "./stage-deploy"
      - run: |
          touch .env
          echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> .env
          echo NEXT_PUBLIC_ENV=${{ secrets.NEXT_PUBLIC_ENV }} >> .env
        working-directory: "./stage-deploy/apps/web"
      - run: |
          touch .env
          echo NEXT_PUBLIC_ENV=${{ secrets.NEXT_PUBLIC_ENV }} >> .env
        working-directory: "./stage-deploy/apps/docs"
      - run: |
          touch .env
          echo SERVER_API_URL=${{ secrets.SERVER_API_URL }} >> .env
          echo NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} >> .env
          echo NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} >> .env
          echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> .env
          echo NEXT_PUBLIC_ENV=${{ secrets.NEXT_PUBLIC_ENV }} >> .env
          echo NEXT_PUBLIC_TURNSTILE_SITE_KEY=${{ secrets.NEXT_PUBLIC_TURNSTILE_SITE_KEY }} >> .env
          echo NEXT_PUBLIC_POSTHOG_KEY=${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }} >> .env
        working-directory: "./stage-deploy/apps/app"
      - run: |
          touch .env
          echo BACKEND_DATABASE_CONNECTION=${{ secrets.BACKEND_DATABASE_CONNECTION }} >> .env
          echo BACKEND_JWT_SECRET=${{ secrets.BACKEND_JWT_SECRET }} >> .env
          echo BACKEND_LOOPS_API_KEY=${{ secrets.BACKEND_LOOPS_API_KEY }} >> .env
          echo BACKEND_APP_URL=${{ secrets.BACKEND_APP_URL }} >> .env
          echo BACKEND_CAPTCHA_SECRET=${{ secrets.BACKEND_CAPTCHA_SECRET }} >> .env
          echo BACKEND_SLACK_WEBHOOK_URL=${{ secrets.BACKEND_SLACK_WEBHOOK_URL }} >> .env
          echo BACKEND_SLACK_ISSUES_WEBHOOK_URL=${{ secrets.BACKEND_SLACK_ISSUES_WEBHOOK_URL }} >> .env
          echo BACKEND_LEMONSQUEEZY_WEBHOOK_SECRET=${{ secrets.BACKEND_LEMONSQUEEZY_WEBHOOK_SECRET }} >> .env
          echo BACKEND_LEMONSQUEEZY_API_KEY=${{ secrets.BACKEND_LEMONSQUEEZY_API_KEY }} >> .env
          echo BACKEND_LEMONSQUEEZY_STORE_ID=${{ secrets.BACKEND_LEMONSQUEEZY_STORE_ID }} >> .env
        working-directory: "./stage-deploy/apps/backend"
      - run: docker build -t docker.flows.sh/app-frontend-stage:${{github.sha}} -f infrastructure/docker/next.Dockerfile --build-arg APP=app .
        working-directory: "./stage-deploy"
      - run: docker build -t docker.flows.sh/web-frontend-stage:${{github.sha}} -f infrastructure/docker/next.Dockerfile --build-arg APP=web .
        working-directory: "./stage-deploy"
      - run: docker build -t docker.flows.sh/docs-frontend-stage:${{github.sha}} -f infrastructure/docker/next.Dockerfile --build-arg APP=docs .
        working-directory: "./stage-deploy"
      - run: docker build -t docker.flows.sh/backend-stage:${{github.sha}} -f infrastructure/docker/nest.Dockerfile .
        working-directory: "./stage-deploy"

  deploy:
    needs: [build]
    runs-on: [self-hosted, stage-env]
    steps:
      - run: docker stop flows-app-frontend-stage
      - run: docker rm flows-app-frontend-stage
      - run: docker run -d --restart always -p 6001:3000 --network flows_supabase_bridge --name flows-app-frontend-stage docker.flows.sh/app-frontend-stage:${{github.sha}}
      - run: docker stop flows-web-frontend-stage
      - run: docker rm flows-web-frontend-stage
      - run: docker run -d --restart always -p 6002:3000 --name flows-web-frontend-stage docker.flows.sh/web-frontend-stage:${{github.sha}}
      - run: docker stop flows-docs-frontend-stage
      - run: docker rm flows-docs-frontend-stage
      - run: docker run -d --restart always -p 6003:3000 --name flows-docs-frontend-stage docker.flows.sh/docs-frontend-stage:${{github.sha}}
      - run: docker stop flows-backend-stage
      - run: docker rm flows-backend-stage
      - run: docker run -d --restart always -p 6005:3005 --network flows_supabase_bridge --name flows-backend-stage docker.flows.sh/backend-stage:${{github.sha}}
